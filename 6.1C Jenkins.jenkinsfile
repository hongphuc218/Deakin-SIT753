pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Using Maven as the build tool
                sh 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Using Maven to run tests
                sh 'mvn test'
            }
        
            post {
                always {
                    emailext (
                        subject: "Notification: Unit and Integration Tests ${currentBuild.result}",
                        body: """<p>Unit and Integration Tests completed with status: ${currentBuild.result}.</p>
                                 <p>See attached logs for details.</p>""",
                        attachLog: true,
                        to: 'hongphuc218@gmail.com'
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing code...'
                // Using SonarQube for code analysis
                sh 'mvn sonar:sonar'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                // Using OWASP Dependency Check
                sh 'mvn dependency-check:check'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
                // Example Command for Deploy to Staging
                sh 'echo Deploying to AWS EC2 staging instance'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Example Command for Integration Tests
                sh 'echo Running integration tests on staging server'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production environment...'
                // Example Command for Deploy to Production
                sh 'echo Deploying to AWS EC2 production instance'
            }
        }
    }
}
